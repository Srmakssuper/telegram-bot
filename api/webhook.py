from http.server import BaseHTTPRequestHandler
import json
import os
import requests

BOT_TOKEN = "8191155033:AAHXqDCDxZVfHOhQ16WjGMIvGweFwUueh6M"
CHANNEL_URL = "https://t.me/SH_Trading_academy"

class Handler(BaseHTTPRequestHandler):
    def do_POST(self):
        if self.path == '/api/webhook':
            # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç Telegram
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            update = json.loads(post_data)
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            self.handle_update(update)
            
            # –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 200 OK –¥–ª—è Telegram
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'OK')
        else:
            self.send_response(404)
            self.end_headers()
    
    def do_GET(self):
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'Bot is running!')
        else:
            self.send_response(404)
            self.end_headers()

    def handle_update(self, update):
        if 'message' in update:
            chat_id = update['message']['chat']['id']
            text = update['message'].get('text', '')
            
            if text == '/start':
                self.send_telegram_message(chat_id, 
                    "üöÄ *SH. Trading Academy* ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —Ç–æ—Ä–≥–æ–≤–ª–∏ üí™\n"
                    "–°–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–∞—à–∏–º–∏ –≤—Ö–æ–¥–∞–º–∏, —É—á–∏—Ç–µ—Å—å –∏ —Ä–∞—Å—Ç–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏!", 
                    True)
            elif text in ['/help', '/info']:
                self.send_telegram_message(chat_id,
                    "ü§ñ *–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?*\n\n"
                    "üí∞ –î–µ–ª–∏–º—Å—è —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–¥–µ–ª–∫–∞–º–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –≤ –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥–∏–º —Å–∞–º–∏, "
                    "–∏ –ø–æ–º–æ–≥–∞–µ–º –Ω–∞—à–∏–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ üëá\n\n"
                    "–ù–∞–∂–º–∏ /start, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏!")
            else:
                self.send_telegram_message(chat_id,
                    "üëã –Ø –±–æ—Ç *SH. Trading Academy*.\n\n"
                    "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é ‚Äî –Ω–∞–ø–∏—à–∏ /help.\n"
                    "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å ‚Äî –Ω–∞–∂–º–∏ /start üöÄ")

    def send_telegram_message(self, chat_id, text, with_button=False):
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        
        reply_markup = None
        if with_button:
            reply_markup = {
                "inline_keyboard": [[
                    {
                        "text": "üì≤ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è",
                        "url": CHANNEL_URL
                    }
                ]]
            }
        
        data = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'Markdown',
            'reply_markup': reply_markup
        }
        
        try:
            requests.post(url, json=data, timeout=10)
        except Exception as e:
            print(f"Error: {e}")

def main(request, response):
    handler = Handler(request, response, {})
    handler.handle()
