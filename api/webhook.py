from http.server import BaseHTTPRequestHandler
import json
import os
import requests

BOT_TOKEN = "8191155033:AAHXqDCDxZVfHOhQ16WjGMIvGweFwUueh6M"
CHANNEL_URL = "https://t.me/SH_Trading_academy"
PHOTO_URL = "https://ibb.co.com/0RCVWmyb"
RISK_PHOTO_URL = "https://img.icons8.com/clouds/1000/security-checked.png"

class Handler(BaseHTTPRequestHandler):
    def do_POST(self):
        if self.path == '/api/webhook':
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            update = json.loads(post_data)
            
            self.handle_update(update)
            
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'OK')
        else:
            self.send_response(404)
            self.end_headers()
    
    def do_GET(self):
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'Bot is running!')
        else:
            self.send_response(404)
            self.end_headers()

    def handle_update(self, update):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
        if 'callback_query' in update:
            chat_id = update['callback_query']['message']['chat']['id']
            callback_data = update['callback_query']['data']
            
            if callback_data == 'risk_accepted':
                self.send_main_offer(chat_id)
            
            # –û—Ç–≤–µ—Ç–∏–º –Ω–∞ callback —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
            self.answer_callback_query(update['callback_query']['id'])
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if 'message' in update:
            chat_id = update['message']['chat']['id']
            text = update['message'].get('text', '')
            
            if text == '/start':
                self.send_complete_disclaimer(chat_id)
            elif text in ['/help', '/info']:
                self.send_telegram_message(chat_id,
                    "ü§ñ *–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?*\n\n"
                    "üí∞ –î–µ–ª–∏–º—Å—è —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–¥–µ–ª–∫–∞–º–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –≤ –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥–∏–º —Å–∞–º–∏, "
                    "–∏ –ø–æ–º–æ–≥–∞–µ–º –Ω–∞—à–∏–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ üëá\n\n"
                    "–ù–∞–∂–º–∏ /start, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏!")
            else:
                self.send_telegram_message(chat_id,
                    "üëã –Ø –±–æ—Ç *SH. Trading Academy*.\n\n"
                    "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é ‚Äî –Ω–∞–ø–∏—à–∏ /help.\n"
                    "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å ‚Äî –Ω–∞–∂–º–∏ /start üöÄ")

    def answer_callback_query(self, callback_query_id):
        """–û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å–∏–∫–∏"""
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/answerCallbackQuery"
        data = {'callback_query_id': callback_query_id}
        try:
            requests.post(url, json=data, timeout=5)
        except Exception as e:
            print(f"Error answering callback: {e}")

    def send_complete_disclaimer(self, chat_id):
        """–í—Å–µ —Ç—Ä–∏ –ø—É–Ω–∫—Ç–∞ –≤ –æ–¥–Ω–æ–º –∫—Ä–∞—Å–∏–≤–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "‚úÖ –Ø –ü–û–ù–ò–ú–ê–Æ –ò –ü–†–ò–ù–ò–ú–ê–Æ –í–°–ï –£–°–õ–û–í–ò–Ø",
                    "callback_data": "risk_accepted"
                }
            ]]
        }
        
        self.send_telegram_photo(chat_id,
            "üîê *–û—Å–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç—Ä–µ–π–¥–∏–Ω–≥ ‚Äî –æ—Å–Ω–æ–≤–∞ —É—Å–ø–µ—Ö–∞*\n\n"
            
            "üìä **1. –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ç—Ä–µ–π–¥–∏–Ω–≥–∞ –∏ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏**\n"
            "‚Ä¢ –Ø –æ—Å–æ–∑–Ω–∞—é, —á—Ç–æ —Ç—Ä–µ–π–¥–∏–Ω–≥ ‚Äî –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å\n"
            "‚Ä¢ –ü—Ä–∏–Ω–∏–º–∞—é –ø–æ–ª–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–≤–æ–∏ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è\n"
            "‚Ä¢ –ü–æ–Ω–∏–º–∞—é –≤—Å–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∏—Å–∫–∏, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Ä—ã–Ω–∫–æ–º\n\n"
            
            "üí∞ **2. –°–æ–≥–ª–∞—Å–∏–µ —Å —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–æ–º**\n"  
            "‚Ä¢ –û–±—è–∑—É—é—Å—å —Å–æ–±–ª—é–¥–∞—Ç—å –ø—Ä–∞–≤–∏–ª–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–∞–ø–∏—Ç–∞–ª–æ–º\n"
            "‚Ä¢ –ë—É–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–æ–ø-–ª–æ—Å—Å –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —É–±—ã—Ç–∫–æ–≤\n"
            "‚Ä¢ –ü—Ä–∏–º—É –ø—Ä–∏–Ω—Ü–∏–ø—ã –º–∞–Ω–∏-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞ (1-2% —Ä–∏—Å–∫–∞ –Ω–∞ —Å–¥–µ–ª–∫—É)\n\n"
            
            "üìâ **3. –ü—Ä–∏–Ω—è—Ç–∏–µ —É–±—ã—Ç–æ—á–Ω—ã—Ö —Å–¥–µ–ª–æ–∫**\n"
            "‚Ä¢ –ü–æ–Ω–∏–º–∞—é, —á—Ç–æ —É–±—ã—Ç–∫–∏ ‚Äî –Ω–µ–æ—Ç—ä–µ–º–ª–µ–º–∞—è —á–∞—Å—Ç—å —Ç—Ä–µ–π–¥–∏–Ω–≥–∞\n"
            "‚Ä¢ –ì–æ—Ç–æ–≤ –∫ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ –æ—Ç –ø—Ä–æ—Å–∞–¥–æ–∫\n"
            "‚Ä¢ –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é —É–±—ã—Ç–∫–∏ –∫–∞–∫ –æ–ø—ã—Ç –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ–≤–∞–Ω–∏—è\n\n"
            
            "üíé *–¢–æ–ª—å–∫–æ –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç–∞–±–∏–ª—å–Ω—ã–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º!*\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∏–∂–µ üëá",
            photo_url=RISK_PHOTO_URL,
            reply_markup=markup)

    def send_main_offer(self, chat_id):
        """–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–∏—è"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "üì≤ –ü–†–ò–°–û–ï–î–ò–ù–ò–¢–¨–°–Ø –ö –ö–ê–ù–ê–õ–£",
                    "url": CHANNEL_URL
                }
            ]]
        }
        
        self.send_telegram_photo(chat_id,
            "üöÄ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SH. Trading Academy!*\n\n"
            "üíé **–¢–µ–ø–µ—Ä—å –≤—ã –≥–æ—Ç–æ–≤—ã –∫ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ!**\n\n"
            "üìà **–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:**\n"
            "‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å 15-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º\n"
            "‚Ä¢ –û–±—É—á–µ–Ω–∏–µ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É –Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–µ\n" 
            "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ —Ç—Ä–µ–π–¥–µ—Ä–æ–≤\n"
            "‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Å–∏–≥–Ω–∞–ª—ã –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n\n"
            "üéØ *–ù–∞—à–∞ —Ü–µ–ª—å ‚Äî —Å–¥–µ–ª–∞—Ç—å –≤–∞—Å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω—ã–º —Ç—Ä–µ–π–¥–µ—Ä–æ–º!*\n\n"
            "üëá –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –∫–∞–Ω–∞–ª—É:",
            photo_url=PHOTO_URL,
            reply_markup=markup)

    def send_telegram_photo(self, chat_id, caption, photo_url=None, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é"""
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendPhoto"
        
        data = {
            'chat_id': chat_id,
            'photo': photo_url or PHOTO_URL,
            'caption': caption,
            'parse_mode': 'Markdown',
        }
        
        if reply_markup:
            data['reply_markup'] = json.dumps(reply_markup)
        
        try:
            requests.post(url, json=data, timeout=10)
        except Exception as e:
            print(f"Error sending photo: {e}")

    def send_telegram_message(self, chat_id, text, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        
        data = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'Markdown',
        }
        
        if reply_markup:
            data['reply_markup'] = json.dumps(reply_markup)
        
        try:
            requests.post(url, json=data, timeout=10)
        except Exception as e:
            print(f"Error: {e}")

def main(request, response):
    handler = Handler(request, response, {})
    handler.handle()
