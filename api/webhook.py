from http.server import BaseHTTPRequestHandler
import json
import os
import requests

BOT_TOKEN = "8191155033:AAHXqDCDxZVfHOhQ16WjGMIvGweFwUueh6M"
CHANNEL_URL = "https://t.me/SH_Trading_academy"
PHOTO_URL = "https://ibb.co.com/0RCVWmyb"
RISK_PHOTO_URL = "https://img.icons8.com/clouds/1000/security-checked.png"
MANAGEMENT_PHOTO_URL = "https://img.icons8.com/clouds/1000/money-bag.png"
LOSSES_PHOTO_URL = "https://img.icons8.com/clouds/1000/chart.png"

class Handler(BaseHTTPRequestHandler):
    def do_POST(self):
        if self.path == '/api/webhook':
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            update = json.loads(post_data)
            
            self.handle_update(update)
            
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'OK')
        else:
            self.send_response(404)
            self.end_headers()
    
    def do_GET(self):
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'Bot is running!')
        else:
            self.send_response(404)
            self.end_headers()

    def handle_update(self, update):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
        if 'callback_query' in update:
            chat_id = update['callback_query']['message']['chat']['id']
            callback_data = update['callback_query']['data']
            
            if callback_data == 'understand_trading':
                self.send_trading_understanding(chat_id)
            elif callback_data == 'understand_management':
                self.send_management_understanding(chat_id)
            elif callback_data == 'understand_losses':
                self.send_losses_understanding(chat_id)
            elif callback_data == 'risk_accepted':
                self.send_main_offer(chat_id)
            
            # –û—Ç–≤–µ—Ç–∏–º –Ω–∞ callback —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å "—á–∞—Å–∏–∫–∏"
            self.answer_callback_query(update['callback_query']['id'])
            return
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        if 'message' in update:
            chat_id = update['message']['chat']['id']
            text = update['message'].get('text', '')
            
            if text == '/start':
                self.send_welcome_disclaimer(chat_id)
            elif text in ['/help', '/info']:
                self.send_telegram_message(chat_id,
                    "ü§ñ *–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?*\n\n"
                    "üí∞ –î–µ–ª–∏–º—Å—è —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–¥–µ–ª–∫–∞–º–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –≤ –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥–∏–º —Å–∞–º–∏, "
                    "–∏ –ø–æ–º–æ–≥–∞–µ–º –Ω–∞—à–∏–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ üëá\n\n"
                    "–ù–∞–∂–º–∏ /start, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏!")
            else:
                self.send_telegram_message(chat_id,
                    "üëã –Ø –±–æ—Ç *SH. Trading Academy*.\n\n"
                    "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é ‚Äî –Ω–∞–ø–∏—à–∏ /help.\n"
                    "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å ‚Äî –Ω–∞–∂–º–∏ /start üöÄ")

    def answer_callback_query(self, callback_query_id):
        """–û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback query —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å–∏–∫–∏"""
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/answerCallbackQuery"
        data = {'callback_query_id': callback_query_id}
        try:
            requests.post(url, json=data, timeout=5)
        except Exception as e:
            print(f"Error answering callback: {e}")

    def send_welcome_disclaimer(self, chat_id):
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –¥–∏—Å–∫–ª–µ–π–º–µ—Ä–æ–º"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "üìö –ü–û–ù–Ø–¢–¨ –û–°–ù–û–í–´ –¢–†–ï–ô–î–ò–ù–ì–ê",
                    "callback_data": "understand_trading"
                }
            ]]
        }
        
        self.send_telegram_photo(chat_id,
            "üéØ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ —Ç—Ä–µ–π–¥–∏–Ω–≥–∞!*\n\n"
            "üíé **SH. Trading Academy** ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–∏–≥–Ω–∞–ª—ã, –∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ\n\n"
            "üìä *–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å, –≤–∞–∂–Ω–æ –ø–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã:*\n"
            "‚Ä¢ –ß—Ç–æ —Ç–∞–∫–æ–µ —Ç—Ä–µ–π–¥–∏–Ω–≥ –∏ –∫–∞–∫–∏–µ —Ä–∏—Å–∫–∏ –æ–Ω –Ω–µ—Å—ë—Ç\n"
            "‚Ä¢ –ö–∞–∫ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–ø–∏—Ç–∞–ª–æ–º\n"
            "‚Ä¢ –ö–∞–∫ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —É–±—ã—Ç–æ—á–Ω—ã–µ —Å–¥–µ–ª–∫–∏\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è üëá",
            photo_url=RISK_PHOTO_URL,
            reply_markup=markup)

    def send_trading_understanding(self, chat_id):
        """–†–∞–∑–¥–µ–ª 1: –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ç—Ä–µ–π–¥–∏–Ω–≥–∞ –∏ —Ä–∏—Å–∫–æ–≤"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "üíº –ü–ï–†–ï–ô–¢–ò –ö –£–ü–†–ê–í–õ–ï–ù–ò–Æ –ö–ê–ü–ò–¢–ê–õ–û–ú",
                    "callback_data": "understand_management"
                }
            ]]
        }
        
        self.send_telegram_photo(chat_id,
            "üìà *–†–∞–∑–¥–µ–ª 1: –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ç—Ä–µ–π–¥–∏–Ω–≥–∞ –∏ —Ä–∏—Å–∫–æ–≤*\n\n"
            "üîç **–¢—Ä–µ–π–¥–∏–Ω–≥ ‚Äî —ç—Ç–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å,** –≥–¥–µ:\n\n"
            "‚úÖ *–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:*\n"
            "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥—ã\n"
            "‚Ä¢ –ì–∏–±–∫–∏–π –≥—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã\n"
            "‚Ä¢ –ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –¥–æ—Ö–æ–¥–∞\n\n"
            "‚ö°Ô∏è *–í—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –Ω–∞ —Å–µ–±—è:*\n"
            "‚Ä¢ –ü–æ–ª–Ω—É—é –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Ä–µ—à–µ–Ω–∏—è\n"
            "‚Ä¢ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Ä–∏—Å–∫–∏ —Ä—ã–Ω–∫–∞\n"
            "‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –Ω–∞–≥—Ä—É–∑–∫—É\n\n"
            "üí° *–û—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ = —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ –¥–µ–π—Å—Ç–≤–∏—è—Ö*",
            photo_url=RISK_PHOTO_URL,
            reply_markup=markup)

    def send_management_understanding(self, chat_id):
        """–†–∞–∑–¥–µ–ª 2: –ú–∞–Ω–∏-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç –∏ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "üìâ –ü–ï–†–ï–ô–¢–ò –ö –¢–ï–ú–ï –£–ë–´–¢–ö–û–í",
                    "callback_data": "understand_losses"
                }
            ]]
        }
        
        self.send_telegram_photo(chat_id,
            "üí∞ *–†–∞–∑–¥–µ–ª 2: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–æ–º –∏ —Ä–∏—Å–∫–∞–º–∏*\n\n"
            "üéØ **–ú–∞–Ω–∏-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç ‚Äî –æ—Å–Ω–æ–≤–∞ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–≥–æ —É—Å–ø–µ—Ö–∞:**\n\n"
            "üõ°Ô∏è *–ó–æ–ª–æ—Ç—ã–µ –ø—Ä–∞–≤–∏–ª–∞:*\n"
            "‚Ä¢ **1-2% —Ä–∏—Å–∫–∞** –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞ –Ω–∞ —Å–¥–µ–ª–∫—É\n"
            "‚Ä¢ **–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è** ‚Äî –Ω–µ –≤—Å–µ —è–π—Ü–∞ –≤ –æ–¥–Ω–æ–π –∫–æ—Ä–∑–∏–Ω–µ\n"
            "‚Ä¢ **–°—Ç–æ–ø-–ª–æ—Å—Å** ‚Äî –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞—â–∏—Ç–∞\n\n"
            "üìä *–†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç ‚Äî –≤–∞—à–∞ –±—Ä–æ–Ω—è:*\n"
            "‚Ä¢ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ä–∏—Å–∫/–ø—Ä–∏–±—ã–ª—å 1:2+\n"
            "‚Ä¢ –†–∞—Å—á–µ—Ç —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–∏ –î–û –≤—Ö–æ–¥–∞\n"
            "‚Ä¢ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–∏—Å–∫—É\n\n"
            "‚öñÔ∏è *–ü—Ä–∞–≤–∏–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∫–∞–ø–∏—Ç–∞–ª, –∫–æ–≥–¥–∞ –∏–Ω—Ç—É–∏—Ü–∏—è –ø–æ–¥–≤–æ–¥–∏—Ç*",
            photo_url=MANAGEMENT_PHOTO_URL,
            reply_markup=markup)

    def send_losses_understanding(self, chat_id):
        """–†–∞–∑–¥–µ–ª 3: –ü—Ä–∏–Ω—è—Ç–∏–µ —É–±—ã—Ç–æ—á–Ω—ã—Ö —Å–¥–µ–ª–æ–∫"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "‚úÖ –Ø –ü–û–ù–ò–ú–ê–Æ –í–°–ï –†–ò–°–ö–ò –ò –°–û–ì–õ–ê–°–ï–ù",
                    "callback_data": "risk_accepted"
                }
            ]]
        }
        
        self.send_telegram_photo(chat_id,
            "üìâ *–†–∞–∑–¥–µ–ª 3: –£–±—ã—Ç–æ—á–Ω—ã–µ —Å–¥–µ–ª–∫–∏ ‚Äî —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞*\n\n"
            "üåä **–†–µ–∞–ª—å–Ω–æ—Å—Ç—å —Ä—ã–Ω–∫–∞:**\n"
            "‚Ä¢ –ù–∏–∫—Ç–æ –Ω–µ —Ç–æ—Ä–≥—É–µ—Ç –±–µ–∑ —É–±—ã—Ç–∫–æ–≤\n"
            "‚Ä¢ –î–∞–∂–µ –ª—É—á—à–∏–µ —Ç—Ä–µ–π–¥–µ—Ä—ã –æ—à–∏–±–∞—é—Ç—Å—è\n"
            "‚Ä¢ –£–±—ã—Ç–∫–∏ ‚Äî –ø–ª–∞—Ç–∞ –∑–∞ –æ–ø—ã—Ç\n\n"
            "üí™ **–ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ:**\n"
            "‚Ä¢ –£–±—ã—Ç–æ–∫ ‚â† –ø—Ä–æ–≤–∞–ª, —É–±—ã—Ç–æ–∫ = —É—Ä–æ–∫\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ = —Ä–æ—Å—Ç –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞\n"
            "‚Ä¢ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å = —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å\n\n"
            "üéØ **–ù–∞—à–∞ —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è:**\n"
            "–ú—ã —É—á–∏–º –Ω–µ –∏–∑–±–µ–≥–∞—Ç—å —É–±—ã—Ç–∫–æ–≤, –∞ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º–∏ —Ç–∞–∫,\n"
            "—á—Ç–æ–±—ã –æ–Ω–∏ –Ω–µ –º–µ—à–∞–ª–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—é —Ü–µ–ª–µ–π!\n\n"
            "*–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –ø—É—Ç—å?*",
            photo_url=LOSSES_PHOTO_URL,
            reply_markup=markup)

    def send_main_offer(self, chat_id):
        """–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–∏—è —Å–æ –≤—Å–µ–º–∏ —Ä–∏—Å–∫–∞–º–∏"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "üì≤ –ü–†–ò–°–û–ï–î–ò–ù–ò–¢–¨–°–Ø –ö –ö–ê–ù–ê–õ–£",
                    "url": CHANNEL_URL
                }
            ]]
        }
        
        self.send_telegram_photo(chat_id,
            "üöÄ *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø—Ä–æ—à–ª–∏ –æ—Å–Ω–æ–≤—ã –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ —Ç—Ä–µ–π–¥–∏–Ω–≥–∞!*\n\n"
            "üíé **–¢–µ–ø–µ—Ä—å –≤—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–µ–∞–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç–µ —Å SH. Trading Academy:**\n\n"
            "üìà *–ß—Ç–æ –≤–∞—Å –∂–¥–µ—Ç:*\n"
            "‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏ —Å –Ω–∞—à–∏–º –≤—Ö–æ–¥–æ–º\n"
            "‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç\n"
            "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–ø—ã—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã\n"
            "‚Ä¢ –ü–æ—Å—Ç–æ—è–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ —Ä–æ—Å—Ç\n\n"
            "üéØ *–ù–∞—à–∞ –º–∏—Å—Å–∏—è:*\n"
            "–°–¥–µ–ª–∞—Ç—å –∏–∑ –≤–∞—Å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ–π–¥–µ—Ä–∞,\n"
            "–∞ –Ω–µ –∑–∞–≤–∏—Å–∏–º–æ–≥–æ –æ—Ç —Å–∏–≥–Ω–∞–ª–æ–≤!\n\n"
            "üëá *–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É:*",
            photo_url=PHOTO_URL,
            reply_markup=markup)

    def send_telegram_photo(self, chat_id, caption, photo_url=None, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é"""
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendPhoto"
        
        data = {
            'chat_id': chat_id,
            'photo': photo_url or PHOTO_URL,
            'caption': caption,
            'parse_mode': 'Markdown',
        }
        
        if reply_markup:
            data['reply_markup'] = json.dumps(reply_markup)
        
        try:
            requests.post(url, json=data, timeout=10)
        except Exception as e:
            print(f"Error sending photo: {e}")

    def send_telegram_message(self, chat_id, text, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        
        data = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'Markdown',
        }
        
        if reply_markup:
            data['reply_markup'] = json.dumps(reply_markup)
        
        try:
            requests.post(url, json=data, timeout=10)
        except Exception as e:
            print(f"Error: {e}")

def main(request, response):
    handler = Handler(request, response, {})
    handler.handle()
