from http.server import BaseHTTPRequestHandler
import json
import os
import requests

BOT_TOKEN = "8191155033:AAHXqDCDxZVfHOhQ16WjGMIvGweFwUueh6M"
CHANNEL_URL = "https://t.me/SH_Trading_academy"
PHOTO_URL = "https://ibb.co.com/0RCVWmyb"
RISK_PHOTO_URL = "https://img.icons8.com/clouds/1000/security-checked.png"

class Handler(BaseHTTPRequestHandler):
    def do_POST(self):
        if self.path == '/api/webhook':
            content_length = int(self.headers['Content-Length'])
            post_data = self.rfile.read(content_length)
            update = json.loads(post_data)
            
            self.handle_update(update)
            
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'OK')
        else:
            self.send_response(404)
            self.end_headers()
    
    def do_GET(self):
        if self.path == '/':
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            self.wfile.write(b'Bot is running!')
        else:
            self.send_response(404)
            self.end_headers()

    def handle_update(self, update):
        if 'message' in update:
            chat_id = update['message']['chat']['id']
            text = update['message'].get('text', '')
            
            if text == '/start':
                # –ü–ï–†–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ - —Ä–∏—Å–∫-–¥–∏—Å–∫–ª–µ–π–º–µ—Ä
                self.send_risk_disclaimer(chat_id)
                
            elif text == '/agree':
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–≥–ª–∞—Å–∏–ª—Å—è - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
                self.send_main_offer(chat_id)
                
            elif text in ['/help', '/info']:
                self.send_telegram_message(chat_id,
                    "ü§ñ *–ß—Ç–æ —É–º–µ–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç?*\n\n"
                    "üí∞ –î–µ–ª–∏–º—Å—è —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Å–¥–µ–ª–∫–∞–º–∏ –±–µ—Å–ø–ª–∞—Ç–Ω–æ, –≤ –∫–æ—Ç–æ—Ä—ã–µ –≤—Ö–æ–¥–∏–º —Å–∞–º–∏, "
                    "–∏ –ø–æ–º–æ–≥–∞–µ–º –Ω–∞—à–∏–º –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏ üëá\n\n"
                    "–ù–∞–∂–º–∏ /start, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏!")
            else:
                self.send_telegram_message(chat_id,
                    "üëã –Ø –±–æ—Ç *SH. Trading Academy*.\n\n"
                    "–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è —É–º–µ—é ‚Äî –Ω–∞–ø–∏—à–∏ /help.\n"
                    "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å ‚Äî –Ω–∞–∂–º–∏ /start üöÄ")

    def send_risk_disclaimer(self, chat_id):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∏—Å–∫-–¥–∏—Å–∫–ª–µ–π–º–µ—Ä–∞"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "‚úÖ –Ø –û–°–û–ó–ù–ê–Æ –†–ò–°–ö–ò –ò –°–û–ì–õ–ê–°–ï–ù",
                    "callback_data": "risk_accepted"
                }
            ]]
        }
        
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–æ —Ä–∏—Å–∫–∏
        self.send_telegram_message(chat_id,
            "üîê *–í–∞–∂–Ω–æ: –û—Å–æ–∑–Ω–∞–Ω–∏–µ —Ä–∏—Å–∫–æ–≤ —Ç—Ä–µ–π–¥–∏–Ω–≥–∞*\n\n"
            "üìä **–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —á—Ç–æ –ø–æ–Ω–∏–º–∞–µ—Ç–µ:**\n"
            "‚Ä¢ –¢—Ä–µ–π–¥–∏–Ω–≥ —Å–≤—è–∑–∞–Ω —Å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–º–∏ —Ä–∏—Å–∫–∞–º–∏\n"
            "‚Ä¢ –í—ã –±–µ—Ä–µ—Ç–µ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–≤–æ–∏ —Ä–µ—à–µ–Ω–∏—è\n"
            "‚Ä¢ –†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç ‚Äî –æ—Å–Ω–æ–≤–∞ —É—Å–ø–µ—Ö–∞\n"
            "‚Ä¢ –£–±—ã—Ç–æ—á–Ω—ã–µ —Å–¥–µ–ª–∫–∏ ‚Äî —á–∞—Å—Ç—å –ø—Ä–æ—Ü–µ—Å—Å–∞\n\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è",
            reply_markup=markup)
        
        # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –æ–±—É—á–µ–Ω–∏–µ–º
        self.send_telegram_photo(chat_id,
            "üí∞ *–û—Å–Ω–æ–≤—ã —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞:*\n\n"
            "‚Ä¢ –ü—Ä–∞–≤–∏–ª–æ 1-2%: —Ä–∏—Å–∫—É–π—Ç–µ –Ω–µ –±–æ–ª–µ–µ 1-2% –æ—Ç –¥–µ–ø–æ–∑–∏—Ç–∞\n"
            "‚Ä¢ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 1:2: —Ä–∏—Å–∫ $10 ‚Üí —Ü–µ–ª—å $20+\n"
            "‚Ä¢ –°—Ç–æ–ø-–ª–æ—Å—Å: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —É–±—ã—Ç–∫–æ–≤\n\n"
            "üíé *–û—Å–æ–∑–Ω–∞–Ω–Ω–∞—è —Ç–æ—Ä–≥–æ–≤–ª—è ‚Äî –∫–ª—é—á –∫ —É—Å–ø–µ—Ö—É!*",
            photo_url=RISK_PHOTO_URL)

    def send_main_offer(self, chat_id):
        """–û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–∏—è"""
        markup = {
            "inline_keyboard": [[
                {
                    "text": "üì≤ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–∞–Ω–∞–ª—É",
                    "url": CHANNEL_URL
                }
            ]]
        }
        
        self.send_telegram_photo(chat_id,
            "üöÄ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SH. Trading Academy!*\n\n"
            "üíé **–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:**\n"
            "‚Ä¢ –†–µ–∞–ª—å–Ω—ã–µ —Å–¥–µ–ª–∫–∏ –æ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤\n"
            "‚Ä¢ –û–±—É—á–µ–Ω–∏–µ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç—É\n" 
            "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫—É —Å–æ–æ–±—â–µ—Å—Ç–≤–∞\n"
            "‚Ä¢ 15-–ª–µ—Ç–Ω–∏–π –æ–ø—ã—Ç –≤ –≤–∞—à–µ–º —Ä–∞—Å–ø–æ—Ä—è–∂–µ–Ω–∏–∏\n\n"
            "üìà *–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–≤–æ–±–æ–¥–µ!*",
            photo_url=PHOTO_URL,
            reply_markup=markup)

    def send_telegram_photo(self, chat_id, caption, photo_url=None, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é"""
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendPhoto"
        
        data = {
            'chat_id': chat_id,
            'photo': photo_url or PHOTO_URL,
            'caption': caption,
            'parse_mode': 'Markdown',
        }
        
        if reply_markup:
            data['reply_markup'] = json.dumps(reply_markup)
        
        try:
            requests.post(url, json=data, timeout=10)
        except Exception as e:
            print(f"Error sending photo: {e}")

    def send_telegram_message(self, chat_id, text, reply_markup=None):
        """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        
        data = {
            'chat_id': chat_id,
            'text': text,
            'parse_mode': 'Markdown',
        }
        
        if reply_markup:
            data['reply_markup'] = json.dumps(reply_markup)
        
        try:
            requests.post(url, json=data, timeout=10)
        except Exception as e:
            print(f"Error: {e}")

def main(request, response):
    handler = Handler(request, response, {})
    handler.handle()
